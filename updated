def fuzzy_membership_temperature(temperature):
    membership = {
        'cold': max(min((50 - temperature) / 50, 1), 0),
        'warm': max(min((temperature - 0) / 50, 1), 0),
        'hot': max(min((temperature - 50) / 50, 1), 0)
    }
    return membership

def fuzzy_rule_base(temperature):
    if temperature['cold'] > 0:
        return {'high': min(temperature['cold'], 1)}
    elif temperature['warm'] > 0:
        return {'medium': min(temperature['warm'], 1)}
    elif temperature['hot'] > 0:
        return {'low': min(temperature['hot'], 1)}

def defuzzify(power):
    values = {'low': 0, 'medium': 50, 'high': 100}
    numerator = sum(value * values[key] for key, value in power.items())
    denominator = sum(power.values())
    return numerator / denominator if denominator != 0 else 0

def fuzzy_controller(current_temperature):
    membership_temperature = fuzzy_membership_temperature(current_temperature)
    power = fuzzy_rule_base(membership_temperature)
    power_level = defuzzify(power)
    return power_level

# Example usage
ambient_temperatures = [10, 20, 30, 40, 50, 60, 70]  # Different temperatures to test
for ambient_temperature in ambient_temperatures:
    power_level = fuzzy_controller(ambient_temperature)
    print(f"Ambient Temperature: {ambient_temperature}Â°C | Power Level: {power_level:.2f}%")
      
